proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream nextjs_upstream {
  ip_hash;
  server nextjs:3000;
}

server {
    listen 80;
    listen [::]:80;
    server_name $http_host;

     proxy_http_version 1.1;
     proxy_set_header Host $host;
     proxy_set_header Connection "";

     # Redirect all HTTP requests to HTTPS
     location / {
         return 301 https://$server_name$request_uri;
     }
}   

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name $http_host;
    server_tokens off;

    # SSL Cert
    ssl_certificate           /etc/nginx/certs/localhost.crt;
    ssl_certificate_key       /etc/nginx/certs/localhost.key;
    ssl_session_cache         shared:SSL:1m;  
    ssl_prefer_server_ciphers on;

    gzip on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/css application/javascript image/svg+xml;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;

    location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://nextjs_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://nextjs_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location / {
    proxy_pass http://nextjs_upstream;
  }
}